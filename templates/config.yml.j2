http:
  routers:
{%- for router in routers %}
    {{router.name}}:
      entryPoints:
        - "https"
      rule: "Host(`{{router.name}}.{{router.domain}}`)"
      middlewares:
{%- for middleware in router.middlewares %}
        - {{middleware}}
{%- endfor %}
      tls: {}
      service: {{router.name}}
{%- endfor %}

  services:
{%- for service in services %}
    {{service.name}}:
      loadBalancer:
        servers:
          - url: "{{service.url}}"
        passHostHeader: true
{%- endfor %}

  middlewares:
{%- for middleware in middlewares %}
    {{middleware.name}}:
      {{middleware.type}}:
{%- if middleware.permanent %}
        permanent: true
{%- endif %}
{%- for rule in middlewares.rules %}
        {{rule.tag}}: "{{rule.value}}"
{%- endfor %}
{%- endfor %}
    default-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https
    default-whitelist:
      ipAllowList:
        sourceRange:
          - "10.0.0.0/8"
          - "192.168.0.0/16"
          - "172.16.0.0/12"
    secured:
      chain:
        middlewares:
          - default-whitelist
          - default-headers
